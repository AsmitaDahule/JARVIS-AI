<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>J.A.R.V.I.S. AI Assistant</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
      @import url("https://fonts.googleapis.com/css2?family=Orbitron:wght@600&display=swap");

      body {
        font-family: "Orbitron", sans-serif;
        background: radial-gradient(circle at center, #000428, #004e92);
        color: #00eaff;
        overflow: hidden;
      }

      .glassmorphism {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(15px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        box-shadow: 0 0 30px rgba(0, 234, 255, 0.4);
        transition: transform 0.3s ease-in-out;
      }

      .glassmorphism:hover {
        transform: scale(1.05);
      }

      .neon-text {
        text-shadow: 0 0 10px #00eaff, 0 0 20px #00eaff, 0 0 40px #00eaff;
        animation: flicker 1.5s infinite alternate;
      }

      @keyframes flicker {
        0% {
          opacity: 1;
        }
        100% {
          opacity: 0.8;
        }
      }

      .neon-btn {
        box-shadow: 0 0 15px #00eaff, 0 0 25px #00eaff;
        transition: all 0.3s ease-in-out;
      }

      .neon-btn:hover {
        box-shadow: 0 0 25px #00eaff, 0 0 35px #00eaff;
        transform: scale(1.1);
      }

      .wave {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 5px;
        margin-top: 15px;
      }

      .wave span {
        display: block;
        width: 5px;
        height: 20px;
        background: #00eaff;
        animation: wave 1.2s infinite ease-in-out;
      }

      .wave span:nth-child(1) {
        animation-delay: -1s;
      }
      .wave span:nth-child(2) {
        animation-delay: -0.8s;
      }
      .wave span:nth-child(3) {
        animation-delay: -0.6s;
      }
      .wave span:nth-child(4) {
        animation-delay: -0.4s;
      }
      .wave span:nth-child(5) {
        animation-delay: -0.2s;
      }

      @keyframes wave {
        0%,
        100% {
          transform: scaleY(1);
        }
        50% {
          transform: scaleY(2);
        }
      }
    </style>
  </head>
  <body class="flex items-center justify-center h-screen">
    <div class="text-center p-8 rounded-3xl glassmorphism w-96">
      <h1 class="text-4xl font-bold neon-text mb-4">J.A.R.V.I.S. AI</h1>

      <button
        id="startRecognition"
        class="bg-transparent neon-btn border-2 border-cyan-400 text-cyan-400 font-bold py-2 px-6 rounded-lg transition duration-300 hover:bg-cyan-400 hover:text-black"
      >
        üéô Activate Listening
      </button>

      <p id="textData" class="mt-4 text-cyan-300 text-lg font-semibold opacity-80">
        Awaiting Command...
      </p>

      <div class="wave" id="wave">
        <span></span><span></span><span></span><span></span><span></span>
      </div>
    </div>

    <script>
      const start = document.getElementById("startRecognition");
      const textData = document.getElementById("textData");
      const wave = document.getElementById("wave");

      start.addEventListener("click", async () => {
        console.log("Listening for Command...");
        wave.style.display = "flex";
        textData.textContent = "Listening...";

        const recognition = new webkitSpeechRecognition();
        recognition.onresult = async ({ results }) => {
          const recognizedText = results[0][0].transcript;
          wave.style.display = "none";
          textData.textContent = "üó£ " + recognizedText;

          try {
            await fetch("http://localhost:8080/jarvis/virtualAssistant", {
              method: "POST",
              headers: {
                "Content-Type": "application/json"
              },
              body: JSON.stringify({ text: recognizedText })
            });
          } catch (error) {
            console.log(error);
            textData.textContent = "‚ö†Ô∏è Error sending request.";
          }
        };

        recognition.start();
      });
    </script>
  </body>
</html>
